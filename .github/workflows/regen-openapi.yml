name: Regenerate from OpenAPI

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
  push:
    branches: ["main"]

concurrency:
  group: regen-openapi
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  regen:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Swift version
        run: swift --version

      - name: Fetch OpenAPI (official) + regenerate
        shell: bash
        run: |
          set -euo pipefail
          bash Scripts/fetch-openapi.sh
          # Run your generator if you have one:
          swift Scripts/generate-from-openapi.swift || true
          swift build
          swift test --enable-code-coverage

      - name: Detect changes
        id: diff
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create PR with changes
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "fix(openapi): regenerate Swift types & client from spec"
          branch: chore/regen-openapi
          title: "fix(openapi): regenerate Swift types & client from spec"
          body: |
            Automated regeneration from official NEAR OpenAPI.
            - Force JSON-RPC POST "/"
            - snake_case â†’ camelCase
            - Build & tests passed in CI
          labels: automated, openapi
          delete-branch: true

      - name: No changes
        if: steps.diff.outputs.changed != 'true'
        run: echo "No changes from latest OpenAPI (nothing to PR)."
